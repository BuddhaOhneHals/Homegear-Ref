{
	"name": "Homegear::pollEvent",
	"category": "General",
	"shortDescription": "Waits for an event from Homegear.",
	"description": "This method blocks until an event from Homegear is received. General events and events concerning all devices are always returned. Device value and configuration changes are only returned if the script has called <a href=\"#HomegearsubscribePeer\">Homegear::subscribePeer()</a> for the device. See the RPC reference for \"event\", \"newDevices\", \"deleteDevices\" and \"updateDevice\" for more information about the returned values. If you are calling pollEvent() from a different thread than the main thread you need to call <a href=\"#HomegearregisterThread\">registerThread()</a> first. When Homegear shuts down, pollEvent() returns array(\"TYPE\" => \"event\", \"PEERID\" => 0, \"CHANNEL\" => -1, \"VARIABLE\" => \"DISPOSING\", \"VALUE\" => true).",
	"signatures": ["array pollEvent([int $timeout = -1])"],
	"parameters": [{
		"name": "timeout",
		"type": "int",
		"description": "The maximum amount of time to wait for an event in milliseconds.",
		"exampleValue": "5000"
	}],
	"returnValue": "Returns an associative array with information about the event: <div class=\"table-responsive\"><table class=\"table table-striped\"><thead><tr><th>Key</th><th>Value</th></tr></thead><tbody><tr><th>TYPE</th><td>The event method called (\"event\", \"deleteDevices\", \"newDevices\" or \"updateDevice\").</td></tr><tr><th>PEERID</th><td>The ID of the peer raising the event. Set for \"event\" and \"updateDevice\".</td></tr><tr><th>CHANNEL</th><td>The channel the event is raised for. Set for \"event\" and \"updateDevice\".</td></tr><tr><th>VARIABLE</th><td>The updated variable. Set for \"event\".</td></tr><tr><th>VALUE</th><td>The new value of the variable (\"event\"), an array of type DeviceDescription (\"newDevices\") or an array with information about the deleted devices (\"deleteDevices\")..</td></tr><tr><th>HINT</th><td>Set for \"updateDevice\". 0: Device or channel configuration changed; 1: Device links changed; 2: Teams changed.</td></tr></tbody></table></div>",
	"errors": [{
		"code": "false",
		"description": "Returned on error."
	}],
	"example": "PD9waHANCi8qKg0KICogQ2xhc3MgdG8gc2hhcmUgZGF0YSBiZXR3ZWVuIHRoZSBtYWluIHNjcmlwdCBhbmQgdGhlIGV2ZW50IHRocmVhZC4NCiAqLw0KY2xhc3MgU2hhcmVkRGF0YSBleHRlbmRzIFRocmVhZGVkDQp7DQogICAgcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCRzY3JpcHRJZCkNCiAgICB7DQogICAgICAgICR0aGlzLT5zY3JpcHRJZCA9ICRzY3JpcHRJZDsNCiAgICAgICAgJHRoaXMtPnJlc2V0RGF0YSgpOw0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiByZXNldERhdGEoKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPnBlZXJJZCA9IDA7DQogICAgICAgICR0aGlzLT52YXJpYWJsZSA9ICcnOw0KICAgICAgICAkdGhpcy0+dmFsdWUgPSAwOw0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiBzZXREYXRhKCRwZWVySWQsICR2YXJpYWJsZSwgJHZhbHVlKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPnBlZXJJZCA9ICRwZWVySWQ7DQogICAgICAgICR0aGlzLT52YXJpYWJsZSA9ICR2YXJpYWJsZTsNCiAgICAgICAgJHRoaXMtPnZhbHVlID0gJHZhbHVlOw0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiBnZXRQZWVySWQoKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5wZWVySWQ7DQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIGdldFZhcmlhYmxlKCkNCiAgICB7DQogICAgICAgIHJldHVybiAkdGhpcy0+dmFyaWFibGU7DQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIGdldFZhbHVlKCkNCiAgICB7DQogICAgICAgIHJldHVybiAkdGhpcy0+dmFsdWU7DQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIHJ1bigpIHt9DQp9DQoNCi8qKg0KICogQ2xhc3MgdG8gcHJvY2VzcyBldmVudHMgcmVjZWl2ZWQgZnJvbSBIb21lZ2Vhcg0KICovDQpjbGFzcyBFdmVudFRocmVhZCBleHRlbmRzIFRocmVhZA0Kew0KICAgIHByaXZhdGUgJHNoYXJlZERhdGE7DQogICAgcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCRzaGFyZWREYXRhKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPnNoYXJlZERhdGEgPSAkc2hhcmVkRGF0YTsNCiAgICB9DQogICAgDQogICAgcHVibGljIGZ1bmN0aW9uIHJ1bigpDQogICAgew0KICAgICAgICAkaGcgPSBuZXcgXEhvbWVnZWFyXEhvbWVnZWFyKCk7DQogICAgICAgIC8vIE1ha2UgdGhlIG5ldyB0aHJlYWQga25vd24gdG8gSG9tZWdlYXIuIFdpdGhvdXQgdGhpcywgcG9sbEV2ZW50KCkgaXMgbm90IHdvcmtpbmcuDQogICAgICAgIGlmKCRoZy0+cmVnaXN0ZXJUaHJlYWQoJHRoaXMtPnNoYXJlZERhdGEtPnNjcmlwdElkKSA9PT0gZmFsc2UpDQogICAgICAgIHsNCiAgICAgICAgICAgICRoZy0+bG9nKDIsICJDb3VsZCBub3QgcmVnaXN0ZXIgdGhyZWFkLiIpOw0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQoNCiAgICAgICAgLy8gR2V0IGFsbCBkZXZpY2VzDQogICAgICAgICRkZXZpY2VzID0gJGhnLT5saXN0RGV2aWNlcyhmYWxzZSwgYXJyYXkoIklEIikpOw0KICAgICAgICBmb3JlYWNoKCRkZXZpY2VzIGFzICRkZXZpY2UpDQogICAgICAgIHsNCiAgICAgICAgICAgIC8vIFN1YnNjcmliZSB0byBkZXZpY2UgdG8gcmVjZWl2ZSBldmVudHMuDQogICAgICAgICAgICAkaGctPnN1YnNjcmliZVBlZXIoJGRldmljZVsiSUQiXSk7DQogICAgICAgIH0NCiAgICAgICAgDQogICAgICAgIC8vIFJ1biB0aGUgdGhyZWFkIHVudGlsIEhvbWVnZWFyIHNodXRzIGRvd24uDQogICAgICAgIHdoaWxlKCEkaGctPnNodXR0aW5nRG93bigpKQ0KICAgICAgICB7DQogICAgICAgICAgICAvLyBXYWl0IGZvciBldmVudC4NCiAgICAgICAgICAgICRyZXN1bHQgPSAkaGctPnBvbGxFdmVudCgpOw0KICAgICAgICAgICAgaWYoJHJlc3VsdCAhPT0gZmFsc2UgJiYgJHJlc3VsdFsiVFlQRSJdID09ICJldmVudCIpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgLy8gUGFzcyByZXN1bHQgdG8gbWFpbiB0aHJlYWQNCiAgICAgICAgICAgICAgICAkdGhpcy0+c2hhcmVkRGF0YS0+c2V0RGF0YSgkcmVzdWx0WyJQRUVSSUQiXSwgJHJlc3VsdFsiVkFSSUFCTEUiXSwgJHJlc3VsdFsiVkFMVUUiXSk7DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgLy8gV2FrZSB1cCBtYWluIHRocmVhZA0KICAgICAgICAgICAgICAgICR0aGlzLT5zeW5jaHJvbml6ZWQoZnVuY3Rpb24oJHRocmVhZCl7ICR0aHJlYWQtPm5vdGlmeSgpOyB9LCAkdGhpcyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQp9DQoNCiRoZyA9IG5ldyBcSG9tZWdlYXJcSG9tZWdlYXIoKTsNCg0KLy8gR2V0IHNjcmlwdCBpZCBhbmQgcGFzc3dvcmQgdG9rZW4uDQokc2NyaXB0SWQgPSAkaGctPmdldFNjcmlwdElkKCk7DQoNCi8vIENyZWF0ZSBuZXcgb2JqZWN0IGZvciBzaGFyaW5nIGRhdGEgYmV0d2VlbiBtYWluIGFuZCBldmVudCB0aHJlYWQuDQokc2hhcmVkRGF0YSA9IG5ldyBTaGFyZWREYXRhKCRzY3JpcHRJZCk7DQoNCi8vIENyZWF0ZSBhbmQgc3RhcnQgbmV3IGV2ZW50IHRocmVhZC4NCiR0aHJlYWQgPSBuZXcgRXZlbnRUaHJlYWQoJHNoYXJlZERhdGEpOw0KJHRocmVhZC0+c3RhcnQoKTsNCg0KLy8gUnVuIG1haW4gdGhyZWFkIHVudGlsIEhvbWVnZWFyIHNodXRzIGRvd24uDQp3aGlsZSghJGhnLT5zaHV0dGluZ0Rvd24oKSkNCnsNCiAgICAvLyBXYWl0IHRvIGJlIG5vdGlmaWVkIGJ5IGV2ZW50IHRocmVhZCB3aXRoIGEgdGltZW91dCBvZiA1IHNlY29uZHMuDQogICAgJHRocmVhZC0+c3luY2hyb25pemVkKGZ1bmN0aW9uKCR0aHJlYWQpeyAkdGhyZWFkLT53YWl0KDUwMDAwMDApOyB9LCAkdGhyZWFkKTsNCiAgICANCiAgICAvLyBDaGVjayBpZiBuZXcgZGF0YSBpcyBhdmFpbGFibGUgd2FzIHNldC4NCiAgICBpZigkc2hhcmVkRGF0YS0+Z2V0VmFyaWFibGUoKSkNCiAgICB7DQogICAgICAgIC8vIFByaW50IHZhcmlhYmxlIG5hbWUgYW5kIHZhbHVlIG9mIGxhc3QgZXZlbnQgdG8gbG9nLg0KICAgICAgICAkaGctPmxvZyg0LCAiR290IGV2ZW50OiBQZWVyOiAiLiRzaGFyZWREYXRhLT5nZXRQZWVySWQoKS4iLCB2YXJpYWJsZTogIi4kc2hhcmVkRGF0YS0+Z2V0VmFyaWFibGUoKS4iLCB2YWx1ZTogIi4kc2hhcmVkRGF0YS0+Z2V0VmFsdWUoKSk7DQogICAgICAgIC8vIFJlc2V0IGRhdGEuDQogICAgICAgICRzaGFyZWREYXRhLT5yZXNldERhdGEoKTsNCiAgICB9DQp9DQoNCi8vIFdhaXQgZm9yIGV2ZW50IHRocmVhZCB0byBmaW5pc2guDQokdGhyZWFkLT5qb2luKCk7DQo/Pg=="
}
