{
	"name": "Homegear::registerThread",
	"category": "General",
	"shortDescription": "Makes a new thread known to Homegear.",
	"description": "This method makes a new thread known to Homegear. This is needed to be able to receive events.",
	"signatures": ["bool registerThread(string $scriptId)"],
	"parameters": [{
		"name": "scriptId",
		"type": "string",
		"description": "The script id and token as returned by \"<a href=\"#HomegeargetScriptId\">getScriptId()</a>\". Note that \"<a href=\"#HomegeargetScriptId\">getScriptId()</a>\" only can be called in main thread or after registerThread() has been called.",
		"exampleValue": "3,MTIzNDU2Nzg5MDEyMzQ1Ng=="
	}],
	"returnValue": "Returns true on success and false if no matching thread could be found.",
	"exampleOutput": [{
		"call": "registerThread(\"3,MTIzNDU2Nzg5MDEyMzQ1Ng==\")",
		"output": "dHJ1ZQ=="
	}],
	"example": "PD9waHANCi8qKg0KICogQ2xhc3MgdG8gc2hhcmUgZGF0YSBiZXR3ZWVuIHRoZSBtYWluIHNjcmlwdCBhbmQgdGhlIGV2ZW50IHRocmVhZC4NCiAqLw0KY2xhc3MgU2hhcmVkRGF0YSBleHRlbmRzIFRocmVhZGVkDQp7DQogICAgcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCRzY3JpcHRJZCkNCiAgICB7DQogICAgICAgICR0aGlzLT5zY3JpcHRJZCA9ICRzY3JpcHRJZDsNCiAgICAgICAgJHRoaXMtPnJlc2V0RGF0YSgpOw0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiByZXNldERhdGEoKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPnBlZXJJZCA9IDA7DQogICAgICAgICR0aGlzLT52YXJpYWJsZSA9ICcnOw0KICAgICAgICAkdGhpcy0+dmFsdWUgPSAwOw0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiBzZXREYXRhKCRwZWVySWQsICR2YXJpYWJsZSwgJHZhbHVlKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPnBlZXJJZCA9ICRwZWVySWQ7DQogICAgICAgICR0aGlzLT52YXJpYWJsZSA9ICR2YXJpYWJsZTsNCiAgICAgICAgJHRoaXMtPnZhbHVlID0gJHZhbHVlOw0KICAgIH0NCg0KICAgIHB1YmxpYyBmdW5jdGlvbiBnZXRQZWVySWQoKQ0KICAgIHsNCiAgICAgICAgcmV0dXJuICR0aGlzLT5wZWVySWQ7DQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIGdldFZhcmlhYmxlKCkNCiAgICB7DQogICAgICAgIHJldHVybiAkdGhpcy0+dmFyaWFibGU7DQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIGdldFZhbHVlKCkNCiAgICB7DQogICAgICAgIHJldHVybiAkdGhpcy0+dmFsdWU7DQogICAgfQ0KDQogICAgcHVibGljIGZ1bmN0aW9uIHJ1bigpIHt9DQp9DQoNCi8qKg0KICogQ2xhc3MgdG8gcHJvY2VzcyBldmVudHMgcmVjZWl2ZWQgZnJvbSBIb21lZ2Vhcg0KICovDQpjbGFzcyBFdmVudFRocmVhZCBleHRlbmRzIFRocmVhZA0Kew0KICAgIHByaXZhdGUgJHNoYXJlZERhdGE7DQogICAgcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCRzaGFyZWREYXRhKQ0KICAgIHsNCiAgICAgICAgJHRoaXMtPnNoYXJlZERhdGEgPSAkc2hhcmVkRGF0YTsNCiAgICB9DQogICAgDQogICAgcHVibGljIGZ1bmN0aW9uIHJ1bigpDQogICAgew0KICAgICAgICAkaGcgPSBuZXcgXEhvbWVnZWFyXEhvbWVnZWFyKCk7DQogICAgICAgIC8vIE1ha2UgdGhlIG5ldyB0aHJlYWQga25vd24gdG8gSG9tZWdlYXIuIFdpdGhvdXQgdGhpcywgcG9sbEV2ZW50KCkgaXMgbm90IHdvcmtpbmcuDQogICAgICAgIGlmKCRoZy0+cmVnaXN0ZXJUaHJlYWQoJHRoaXMtPnNoYXJlZERhdGEtPnNjcmlwdElkKSA9PT0gZmFsc2UpDQogICAgICAgIHsNCiAgICAgICAgICAgICRoZy0+bG9nKDIsICJDb3VsZCBub3QgcmVnaXN0ZXIgdGhyZWFkLiIpOw0KICAgICAgICAgICAgcmV0dXJuOw0KICAgICAgICB9DQoNCiAgICAgICAgLy8gR2V0IGFsbCBkZXZpY2VzDQogICAgICAgICRkZXZpY2VzID0gJGhnLT5saXN0RGV2aWNlcyhmYWxzZSwgYXJyYXkoIklEIikpOw0KICAgICAgICBmb3JlYWNoKCRkZXZpY2VzIGFzICRkZXZpY2UpDQogICAgICAgIHsNCiAgICAgICAgICAgIC8vIFN1YnNjcmliZSB0byBkZXZpY2UgdG8gcmVjZWl2ZSBldmVudHMuDQogICAgICAgICAgICAkaGctPnN1YnNjcmliZVBlZXIoJGRldmljZVsiSUQiXSk7DQogICAgICAgIH0NCiAgICAgICAgDQogICAgICAgIC8vIFJ1biB0aGUgdGhyZWFkIHVudGlsIEhvbWVnZWFyIHNodXRzIGRvd24uDQogICAgICAgIHdoaWxlKCEkaGctPnNodXR0aW5nRG93bigpKQ0KICAgICAgICB7DQogICAgICAgICAgICAvLyBXYWl0IGZvciBldmVudC4NCiAgICAgICAgICAgICRyZXN1bHQgPSAkaGctPnBvbGxFdmVudCgpOw0KICAgICAgICAgICAgaWYoJHJlc3VsdCAhPT0gZmFsc2UgJiYgJHJlc3VsdFsiVFlQRSJdID09ICJldmVudCIpDQogICAgICAgICAgICB7DQogICAgICAgICAgICAgICAgLy8gUGFzcyByZXN1bHQgdG8gbWFpbiB0aHJlYWQNCiAgICAgICAgICAgICAgICAkdGhpcy0+c2hhcmVkRGF0YS0+c2V0RGF0YSgkcmVzdWx0WyJQRUVSSUQiXSwgJHJlc3VsdFsiVkFSSUFCTEUiXSwgJHJlc3VsdFsiVkFMVUUiXSk7DQogICAgICAgICAgICAgICAgDQogICAgICAgICAgICAgICAgLy8gV2FrZSB1cCBtYWluIHRocmVhZA0KICAgICAgICAgICAgICAgICR0aGlzLT5zeW5jaHJvbml6ZWQoZnVuY3Rpb24oJHRocmVhZCl7ICR0aHJlYWQtPm5vdGlmeSgpOyB9LCAkdGhpcyk7DQogICAgICAgICAgICB9DQogICAgICAgIH0NCiAgICB9DQp9DQoNCiRoZyA9IG5ldyBcSG9tZWdlYXJcSG9tZWdlYXIoKTsNCg0KLy8gR2V0IHNjcmlwdCBpZCBhbmQgcGFzc3dvcmQgdG9rZW4uDQokc2NyaXB0SWQgPSAkaGctPmdldFNjcmlwdElkKCk7DQoNCi8vIENyZWF0ZSBuZXcgb2JqZWN0IGZvciBzaGFyaW5nIGRhdGEgYmV0d2VlbiBtYWluIGFuZCBldmVudCB0aHJlYWQuDQokc2hhcmVkRGF0YSA9IG5ldyBTaGFyZWREYXRhKCRzY3JpcHRJZCk7DQoNCi8vIENyZWF0ZSBhbmQgc3RhcnQgbmV3IGV2ZW50IHRocmVhZC4NCiR0aHJlYWQgPSBuZXcgRXZlbnRUaHJlYWQoJHNoYXJlZERhdGEpOw0KJHRocmVhZC0+c3RhcnQoKTsNCg0KLy8gUnVuIG1haW4gdGhyZWFkIHVudGlsIEhvbWVnZWFyIHNodXRzIGRvd24uDQp3aGlsZSghJGhnLT5zaHV0dGluZ0Rvd24oKSkNCnsNCiAgICAvLyBXYWl0IHRvIGJlIG5vdGlmaWVkIGJ5IGV2ZW50IHRocmVhZCB3aXRoIGEgdGltZW91dCBvZiA1IHNlY29uZHMuDQogICAgJHRocmVhZC0+c3luY2hyb25pemVkKGZ1bmN0aW9uKCR0aHJlYWQpeyAkdGhyZWFkLT53YWl0KDUwMDAwMDApOyB9LCAkdGhyZWFkKTsNCiAgICANCiAgICAvLyBDaGVjayBpZiBuZXcgZGF0YSBpcyBhdmFpbGFibGUgd2FzIHNldC4NCiAgICBpZigkc2hhcmVkRGF0YS0+Z2V0VmFyaWFibGUoKSkNCiAgICB7DQogICAgICAgIC8vIFByaW50IHZhcmlhYmxlIG5hbWUgYW5kIHZhbHVlIG9mIGxhc3QgZXZlbnQgdG8gbG9nLg0KICAgICAgICAkaGctPmxvZyg0LCAiR290IGV2ZW50OiBQZWVyOiAiLiRzaGFyZWREYXRhLT5nZXRQZWVySWQoKS4iLCB2YXJpYWJsZTogIi4kc2hhcmVkRGF0YS0+Z2V0VmFyaWFibGUoKS4iLCB2YWx1ZTogIi4kc2hhcmVkRGF0YS0+Z2V0VmFsdWUoKSk7DQogICAgICAgIC8vIFJlc2V0IGRhdGEuDQogICAgICAgICRzaGFyZWREYXRhLT5yZXNldERhdGEoKTsNCiAgICB9DQp9DQoNCi8vIFdhaXQgZm9yIGV2ZW50IHRocmVhZCB0byBmaW5pc2guDQokdGhyZWFkLT5qb2luKCk7DQo/Pg=="
}
